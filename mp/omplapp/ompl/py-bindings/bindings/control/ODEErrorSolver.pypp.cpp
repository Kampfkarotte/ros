// This file has been generated by Py++.

#include "boost/python.hpp"
#include "bindings/control.h"
#include "ODEErrorSolver.pypp.hpp"

namespace bp = boost::python;

struct ODEErrorSolver_less__boost_scope_numeric_scope_odeint_scope_runge_kutta_cash_karp54_less__std_scope_vector_less__double__greater__comma__double_comma__std_scope_vector_less__double__greater__comma__double_comma__boost_scope_numeric_scope_odeint_scope_range_algebra_comma__boost_scope_numeric_scope_odeint_scope_default_operations_comma__boost_scope_numeric_scope_odeint_scope_initially_resizer__greater___greater__wrapper : ompl::control::ODEErrorSolver< boost::numeric::odeint::runge_kutta_cash_karp54< std::vector< double >, double, std::vector< double >, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer > >, bp::wrapper< ompl::control::ODEErrorSolver< boost::numeric::odeint::runge_kutta_cash_karp54< std::vector< double >, double, std::vector< double >, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer > > > {

    ODEErrorSolver_less__boost_scope_numeric_scope_odeint_scope_runge_kutta_cash_karp54_less__std_scope_vector_less__double__greater__comma__double_comma__std_scope_vector_less__double__greater__comma__double_comma__boost_scope_numeric_scope_odeint_scope_range_algebra_comma__boost_scope_numeric_scope_odeint_scope_default_operations_comma__boost_scope_numeric_scope_odeint_scope_initially_resizer__greater___greater__wrapper(::boost::shared_ptr< ompl::control::SpaceInformation > const & si, ::boost::function< void (std::vector< double, std::allocator< double > >, ompl::control::Control const*, std::vector<double, std::allocator<double> >&) > const & ode, double intStep=1.00000000000000002081668171172168513294309377670288085938e-2 )
    : ompl::control::ODEErrorSolver<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double, std::allocator<double> >, double, std::vector<double, std::allocator<double> >, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer> >( si, boost::ref(ode), intStep )
      , bp::wrapper< ompl::control::ODEErrorSolver< boost::numeric::odeint::runge_kutta_cash_karp54< std::vector< double >, double, std::vector< double >, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer > > >(){
        // constructor
    
    }

    virtual void solve( ::std::vector< double > & state, ::ompl::control::Control const * control, double const duration ) const {
        if( bp::override func_solve = this->get_override( "solve" ) )
            func_solve( boost::ref(state), boost::python::ptr(control), duration );
        else{
            this->ompl::control::ODEErrorSolver< boost::numeric::odeint::runge_kutta_cash_karp54< std::vector< double >, double, std::vector< double >, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer > >::solve( boost::ref(state), boost::python::ptr(control), duration );
        }
    }
    
    virtual void default_solve( ::std::vector< double > & state, ::ompl::control::Control const * control, double const duration ) const {
        ompl::control::ODEErrorSolver< boost::numeric::odeint::runge_kutta_cash_karp54< std::vector< double >, double, std::vector< double >, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer > >::solve( boost::ref(state), boost::python::ptr(control), duration );
    }

};

void register_ODEErrorSolver_class(){

    { //::ompl::control::ODEErrorSolver< boost::numeric::odeint::runge_kutta_cash_karp54< std::vector< double >, double, std::vector< double >, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer > >
        typedef bp::class_< ODEErrorSolver_less__boost_scope_numeric_scope_odeint_scope_runge_kutta_cash_karp54_less__std_scope_vector_less__double__greater__comma__double_comma__std_scope_vector_less__double__greater__comma__double_comma__boost_scope_numeric_scope_odeint_scope_range_algebra_comma__boost_scope_numeric_scope_odeint_scope_default_operations_comma__boost_scope_numeric_scope_odeint_scope_initially_resizer__greater___greater__wrapper, bp::bases< ompl::control::ODESolver >, boost::noncopyable > ODEErrorSolver_exposer_t;
        ODEErrorSolver_exposer_t ODEErrorSolver_exposer = ODEErrorSolver_exposer_t( "ODEErrorSolver", bp::init< boost::shared_ptr< ompl::control::SpaceInformation > const &, boost::function< void (std::vector< double, std::allocator< double > >, ompl::control::Control const*, std::vector<double, std::allocator<double> >&) > const &, bp::optional< double > >(( bp::arg("si"), bp::arg("ode"), bp::arg("intStep")=1.00000000000000002081668171172168513294309377670288085938e-2 )) );
        bp::scope ODEErrorSolver_scope( ODEErrorSolver_exposer );
        { //::ompl::control::ODEErrorSolver< boost::numeric::odeint::runge_kutta_cash_karp54< std::vector< double >, double, std::vector< double >, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer > >::getError
        
            typedef ompl::control::ODEErrorSolver< boost::numeric::odeint::runge_kutta_cash_karp54< std::vector< double >, double, std::vector< double >, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer > > exported_class_t;
            typedef ::std::vector< double > ( exported_class_t::*getError_function_type)(  ) ;
            
            ODEErrorSolver_exposer.def( 
                "getError"
                , getError_function_type( &::ompl::control::ODEErrorSolver< boost::numeric::odeint::runge_kutta_cash_karp54< std::vector< double >, double, std::vector< double >, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer > >::getError ) );
        
        }
        { //::ompl::control::ODEErrorSolver< boost::numeric::odeint::runge_kutta_cash_karp54< std::vector< double >, double, std::vector< double >, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer > >::solve
        
            typedef ompl::control::ODEErrorSolver< boost::numeric::odeint::runge_kutta_cash_karp54< std::vector< double >, double, std::vector< double >, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer > > exported_class_t;
            typedef void ( ODEErrorSolver_less__boost_scope_numeric_scope_odeint_scope_runge_kutta_cash_karp54_less__std_scope_vector_less__double__greater__comma__double_comma__std_scope_vector_less__double__greater__comma__double_comma__boost_scope_numeric_scope_odeint_scope_range_algebra_comma__boost_scope_numeric_scope_odeint_scope_default_operations_comma__boost_scope_numeric_scope_odeint_scope_initially_resizer__greater___greater__wrapper::*solve_function_type)( ::std::vector< double > &,::ompl::control::Control const *,double const ) const;
            
            ODEErrorSolver_exposer.def( 
                "solve"
                , solve_function_type( &ODEErrorSolver_less__boost_scope_numeric_scope_odeint_scope_runge_kutta_cash_karp54_less__std_scope_vector_less__double__greater__comma__double_comma__std_scope_vector_less__double__greater__comma__double_comma__boost_scope_numeric_scope_odeint_scope_range_algebra_comma__boost_scope_numeric_scope_odeint_scope_default_operations_comma__boost_scope_numeric_scope_odeint_scope_initially_resizer__greater___greater__wrapper::default_solve )
                , ( bp::arg("state"), bp::arg("control"), bp::arg("duration") ) );
        
        }
    }

}
