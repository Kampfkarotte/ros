// This file has been generated by Py++.

#include "boost/python.hpp"
#include "bindings/util.h"
#include "_util_free_functions.pypp.hpp"

namespace bp = boost::python;

void register_free_functions(){

    { //::ompl::util::dummySTLContainerSize
    
        typedef int ( *dummySTLContainerSize_function_type )(  );
        
        bp::def( 
            "dummySTLContainerSize"
            , dummySTLContainerSize_function_type( &::ompl::util::dummySTLContainerSize ) );
    
    }

    { //::ompl::msg::getLogLevel
    
        typedef ::ompl::msg::LogLevel ( *getLogLevel_function_type )(  );
        
        bp::def( 
            "getLogLevel"
            , getLogLevel_function_type( &::ompl::msg::getLogLevel ) );
    
    }

    { //::ompl::msg::getOutputHandler
    
        typedef ::ompl::msg::OutputHandler * ( *getOutputHandler_function_type )(  );
        
        bp::def( 
            "getOutputHandler"
            , getOutputHandler_function_type( &::ompl::msg::getOutputHandler )
            , bp::return_value_policy< bp::reference_existing_object >() );
    
    }

    { //::ompl::msg::noOutputHandler
    
        typedef void ( *noOutputHandler_function_type )(  );
        
        bp::def( 
            "noOutputHandler"
            , noOutputHandler_function_type( &::ompl::msg::noOutputHandler ) );
    
    }

    { //::ompl::msg::restorePreviousOutputHandler
    
        typedef void ( *restorePreviousOutputHandler_function_type )(  );
        
        bp::def( 
            "restorePreviousOutputHandler"
            , restorePreviousOutputHandler_function_type( &::ompl::msg::restorePreviousOutputHandler ) );
    
    }

    { //::ompl::msg::setLogLevel
    
        typedef void ( *setLogLevel_function_type )( ::ompl::msg::LogLevel );
        
        bp::def( 
            "setLogLevel"
            , setLogLevel_function_type( &::ompl::msg::setLogLevel )
            , ( bp::arg("level") ) );
    
    }

    { //::ompl::msg::useOutputHandler
    
        typedef void ( *useOutputHandler_function_type )( ::ompl::msg::OutputHandler * );
        
        bp::def( 
            "useOutputHandler"
            , useOutputHandler_function_type( &::ompl::msg::useOutputHandler )
            , ( bp::arg("oh") ) );
    
    }

}
