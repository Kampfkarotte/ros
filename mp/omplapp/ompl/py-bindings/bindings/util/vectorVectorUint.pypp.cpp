// This file has been generated by Py++.

#include "boost/python.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
#include "bindings/util.h"
#include "vectorVectorUint.pypp.hpp"

namespace bp = boost::python;

void register_vectorVectorUint_class(){

    { //::std::vector< std::vector< unsigned int > >
        typedef bp::class_< std::vector< std::vector< unsigned int > > > vectorVectorUint_exposer_t;
        vectorVectorUint_exposer_t vectorVectorUint_exposer = vectorVectorUint_exposer_t( "vectorVectorUint" );
        bp::scope vectorVectorUint_scope( vectorVectorUint_exposer );
        //WARNING: the next line of code will not compile, because "::std::vector<unsigned int, std::allocator<unsigned int> >" does not have operator== !
        vectorVectorUint_exposer.def( bp::vector_indexing_suite< ::std::vector< std::vector< unsigned int > > >() );
    }

}
