// This file has been generated by Py++.

#include "boost/python.hpp"
#include "bindings/geometric.h"
#include "KStrategy.pypp.hpp"

namespace bp = boost::python;

void register_KStrategy_class(){

    { //::ompl::geometric::KStrategy< unsigned long >
        typedef bp::class_< ompl::geometric::KStrategy< unsigned long > > KStrategy_exposer_t;
        KStrategy_exposer_t KStrategy_exposer = KStrategy_exposer_t( "KStrategy", bp::init< unsigned int, boost::shared_ptr< ompl::NearestNeighbors< unsigned long > > const & >(( bp::arg("k"), bp::arg("nn") )) );
        bp::scope KStrategy_scope( KStrategy_exposer );
        { //::ompl::geometric::KStrategy< unsigned long >::operator()
        
            typedef ompl::geometric::KStrategy< unsigned long > exported_class_t;
            typedef ::std::vector< unsigned long > & ( exported_class_t::*__call___function_type)( long unsigned int const & ) ;
            
            KStrategy_exposer.def( 
                "__call__"
                , __call___function_type( &::ompl::geometric::KStrategy< unsigned long >::operator() )
                , ( bp::arg("m") )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::ompl::geometric::KStrategy< unsigned long >::setNearestNeighbors
        
            typedef ompl::geometric::KStrategy< unsigned long > exported_class_t;
            typedef void ( exported_class_t::*setNearestNeighbors_function_type)( ::boost::shared_ptr< ompl::NearestNeighbors< unsigned long > > const & ) ;
            
            KStrategy_exposer.def( 
                "setNearestNeighbors"
                , setNearestNeighbors_function_type( &::ompl::geometric::KStrategy< unsigned long >::setNearestNeighbors )
                , ( bp::arg("nn") ) );
        
        }
    }

}
