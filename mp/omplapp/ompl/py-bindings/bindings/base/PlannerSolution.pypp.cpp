// This file has been generated by Py++.

#include "boost/python.hpp"
#include "bindings/base.h"
#include "PlannerSolution.pypp.hpp"

namespace bp = boost::python;

void register_PlannerSolution_class(){

    { //::ompl::base::PlannerSolution
        typedef bp::class_< ompl::base::PlannerSolution > PlannerSolution_exposer_t;
        PlannerSolution_exposer_t PlannerSolution_exposer = PlannerSolution_exposer_t( "PlannerSolution", bp::init< ompl::base::PathPtr const &, bp::optional< bool, double, std::string const & > >(( bp::arg("path"), bp::arg("approximate")=(bool)(false), bp::arg("difference")=-1.0e+0, bp::arg("plannerName")="" )) );
        bp::scope PlannerSolution_scope( PlannerSolution_exposer );
        bp::implicitly_convertible< ompl::base::PathPtr const &, ompl::base::PlannerSolution >();
        PlannerSolution_exposer.def( bp::self < bp::self );
        PlannerSolution_exposer.def( bp::self == bp::self );
        PlannerSolution_exposer.def_readwrite( "approximate_", &ompl::base::PlannerSolution::approximate_ );
        PlannerSolution_exposer.def_readwrite( "difference_", &ompl::base::PlannerSolution::difference_ );
        PlannerSolution_exposer.def_readwrite( "index_", &ompl::base::PlannerSolution::index_ );
        PlannerSolution_exposer.def_readwrite( "length_", &ompl::base::PlannerSolution::length_ );
        PlannerSolution_exposer.def_readwrite( "optimized_", &ompl::base::PlannerSolution::optimized_ );
        PlannerSolution_exposer.def_readwrite( "path_", &ompl::base::PlannerSolution::path_ );
        PlannerSolution_exposer.def_readwrite( "plannerName_", &ompl::base::PlannerSolution::plannerName_ );
    }

}
